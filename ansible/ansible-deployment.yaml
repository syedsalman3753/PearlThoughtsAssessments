- hosts: nginx
  become: true
  gather_facts: true
  tasks:
      - name: Ensure apt dependencies are installed
        apt:
            name:
                - ca-certificates
                - curl
                - gnupg
                - lsb-release
                - wget
            state: present

      - name: Create keyrings directory
        file:
            path: /etc/apt/keyrings
            state: directory
            mode: '0755'

      - name: Download Docker GPG key
        get_url:
            url: https://download.docker.com/linux/ubuntu/gpg
            dest: /etc/apt/keyrings/docker.asc
            mode: '0644'

      - name: Set up the Docker repository
        shell: |
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            sudo apt-get update

      - name: Install Docker and Docker Compose
        apt:
            name:
                - docker-ce
                - docker-ce-cli
                - containerd.io
                - docker-compose-plugin
            state: present

      - name: Add user to docker group
        user:
            name: "{{ ansible_user }}"
            groups: docker
            append: yes

      - name: Start and Enable Docker
        service:
            name: docker
            state: started
            enabled: true

      - name: Install NGINX
        apt:
            name: nginx
            state: present

      - name: Backup existing NGINX config with timestamp
        copy:
            src: /etc/nginx/nginx.conf
            dest: "/etc/nginx/nginx.conf.bkp-{{ ansible_date_time.date }}-{{ ansible_date_time.time }}"
            mode: '0644'
            remote_src: yes
        become: true

      - name: Copy NGINX config
        copy:
            src: ../nginx/default.conf
            dest: /etc/nginx/nginx.conf
            mode: '0644'
            #remote_src: true

      - name: Start and Enable Nginx
        service:
            name: nginx
            state: restarted
            enabled: true

      - name: Create destination directory if it does not exist
        file:
            path: "/home/{{ ansible_user }}/docker-compose"
            state: directory
            owner: "{{ ansible_user }}"
            group: "{{ ansible_user }}"
            mode: '0755'

      - name: Copy docker-compose.yaml file to EC2 instance
        copy:
            src: ../docker-compose.yaml
            dest: "/home/{{ ansible_user }}/docker-compose/docker-compose.yaml"
            mode: '0644'

      - name: Initialize Docker Swarm
        shell: docker swarm init || true
        args:
            chdir: "/home/{{ ansible_user }}/docker-compose/"

      - name: Deploy stack from project directory
        shell: docker stack deploy -c docker-compose.yaml webapp
        register: ls_pwd
        args:
          chdir: "/home/{{ ansible_user }}/docker-compose/"
      - debug:
          var: ls_pwd.stdout_lines
