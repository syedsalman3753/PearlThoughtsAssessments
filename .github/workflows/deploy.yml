name: Deploy Yii2 to EC2

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      NAMESPACE: ${{ secrets.DEV_NAMESPACE_DOCKER_HUB }}
      SERVICE_LOCATION: ./
      SERVICE_NAME: webapp
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get current date
        run: |
          echo "BUILD_TIME=$(date +'%Y-%m-%d-%H-%M-%S')"  >> $GITHUB_ENV
          echo "BRANCH_NAME=$(echo ${{ github.ref }} | sed -e 's,.*/\(.*\),\1,')" >> $GITHUB_ENV

      - name: Build check for Docker label
        run: |
          cd ${{ inputs.SERVICE_LOCATION }}
          for layer in  ARG\\s+SOURCE ARG\\s+COMMIT_HASH ARG\\s+COMMIT_ID ARG\\s+BUILD_TIME LABEL\\s+source=\\$\\{SOURCE\\} LABEL\\s+commit_hash=\\$\\{COMMIT_HASH\\} LABEL\\s+commit_id=\\$\\{COMMIT_ID\\} LABEL\\s+build_time=\\$\\{BUILD_TIME\\}; do
            layer_count=$( grep -Ev '^$' Dockerfile | grep -Ec "$layer" || true);
          
            if [[ $layer_count -ne 1 ]]; then
              dlayer=$( echo $layer | sed -E 's/\\s\+/ /g' | sed -E 's/\\//g' )
              echo "Docker layer : \"$dlayer\" not found; EXITING";
              exit 1;
            fi
          done

      - name: Build image
        run: |
          cd ${{ inputs.SERVICE_LOCATION }}
          docker build . --build-arg SOURCE=mosip --build-arg COMMIT_HASH=$(git rev-parse HEAD) --build-arg COMMIT_ID=$(git rev-parse --short HEAD) --build-arg BUILD_TIME=$BUILD_TIME --file Dockerfile --tag $NAMESPACE/$SERVICE_NAME:$BRANCH_NAME


      - name: Log into registry
        if: "${{ github.event_name != 'pull_request' }}"
        run: echo "${{secrets.RELEASE_DOCKER_HUB}}" | docker login -u ${{secrets.ACTOR_DOCKER_HUB}} --password-stdin


      - name: Push Image
        run: |
          docker push IMAGE_ID=$NAMESPACE/$SERVICE_NAME:$BRANCH_NAME

      - name: SSH into EC2 and deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull $IMAGE_NAME:latest
            docker service update --image $IMAGE_NAME:latest yii2_yii2-app || docker stack deploy -c /home/ubuntu/yii2-app/docker-compose.yml yii2
